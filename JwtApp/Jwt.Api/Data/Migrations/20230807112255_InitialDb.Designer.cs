// <auto-generated />
using System;
using Jwt.Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jwt.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230807112255_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("Jwt.Api.Models.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 23,
                            Email = "ut.nec@icloud.edu",
                            FullName = "Quinn Baldwin",
                            Phone = "(687) 487-7412"
                        },
                        new
                        {
                            Id = 2,
                            Age = 50,
                            Email = "cras.pellentesque@outlook.couk",
                            FullName = "Shoshana Campbell",
                            Phone = "(868) 245-2812"
                        },
                        new
                        {
                            Id = 3,
                            Age = 39,
                            Email = "consequat.dolor.vitae@outlook.org",
                            FullName = "India Johnson",
                            Phone = "(394) 327-4827"
                        },
                        new
                        {
                            Id = 4,
                            Age = 27,
                            Email = "arcu.iaculis.enim@protonmail.net",
                            FullName = "Odysseus Watkins",
                            Phone = "(884) 344-2238"
                        },
                        new
                        {
                            Id = 5,
                            Age = 32,
                            Email = "nulla@yahoo.org",
                            FullName = "Germane Lynch",
                            Phone = "(527) 785-7348"
                        },
                        new
                        {
                            Id = 6,
                            Age = 22,
                            Email = "risus.donec@aol.edu",
                            FullName = "Myra Lott",
                            Phone = "(681) 436-3166"
                        },
                        new
                        {
                            Id = 7,
                            Age = 31,
                            Email = "malesuada.fames@hotmail.net",
                            FullName = "Cade Chase",
                            Phone = "(406) 236-6085"
                        },
                        new
                        {
                            Id = 8,
                            Age = 49,
                            Email = "euismod.ac@protonmail.org",
                            FullName = "Todd Kennedy",
                            Phone = "(445) 870-7432"
                        },
                        new
                        {
                            Id = 9,
                            Age = 33,
                            Email = "id.mollis.nec@hotmail.com",
                            FullName = "Lunea Pennington",
                            Phone = "(847) 885-3753"
                        },
                        new
                        {
                            Id = 10,
                            Age = 42,
                            Email = "lectus.ante@icloud.com",
                            FullName = "Azalia Ellis",
                            Phone = "(618) 483-2702"
                        });
                });

            modelBuilder.Entity("Jwt.Api.Models.Identity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleInformation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleInformation = "This role has all processes.",
                            RoleTitle = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            RoleInformation = "This role has only get and create processes.",
                            RoleTitle = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            RoleInformation = "This role has only get process.",
                            RoleTitle = "Standard"
                        });
                });

            modelBuilder.Entity("Jwt.Api.Models.Identity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TokenExpiredDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@mail.com",
                            Password = "123456",
                            RoleId = 1,
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "joel.foster@mail.com",
                            Password = "123456",
                            RoleId = 2,
                            Username = "joel_foster"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Elis.Howard@mail.com",
                            Password = "123456",
                            RoleId = 3,
                            Username = "elis_howard"
                        },
                        new
                        {
                            Id = 4,
                            Email = "lucas.mccarthy@mail.com",
                            Password = "123456",
                            RoleId = 3,
                            Username = "lucas_mccarthy"
                        },
                        new
                        {
                            Id = 5,
                            Email = "andrew.stone@mail.com",
                            Password = "123456",
                            RoleId = 3,
                            Username = "andrew_stone"
                        });
                });

            modelBuilder.Entity("Jwt.Api.Models.Identity.User", b =>
                {
                    b.HasOne("Jwt.Api.Models.Identity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Jwt.Api.Models.Identity.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
